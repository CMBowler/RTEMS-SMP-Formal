ISSUES

RTEMS coding standard - maximum linelength - 80 chars

TEST_GEN not TESTGEN !

Was the python code that converted .trail to .spn modified?

Need to output scenario identifications to test log


Issue with allsteps:
pan: elapsed time 0.13 seconds
pan: rate 827907.69 states/second
error executing: spin -T -t20 task-mgr.pml > gen/task-mgr-19.spn
(env) task-mgr% 


test 17 has error at end only
test 16 has strange blank L: lines and blank lines

task-mgr-h.pml:171    bool rc;  declared in inline ReleaseMutex

task-mgr-API.pml  
  - indenting too deep
  - comment at top summarising RTEMS api call

CREATE:
rtems_status_code rtems_task_create(
  rtems_name          name,
  rtems_task_priority initial_priority,
  size_t              stack_size,
  rtems_mode          initial_modes,
  rtems_attribute     attribute_set,
  rtems_id           *id
);

inline task_create(task, tid, name, prio, preempt, tidRC, rc)

  tidRC ???  


lines 5,11,13  `::` way too deep


task-mgr.pml

114:   task_control = 28;  // why that number?
   Need to add comments

172: very long lines  (coding std 80 chars)
  use inline for this like these
    atomic{printf("@@@ %d LOG scenario ",_pid); printm(scenario); nl()} ;
    atomic{printf("@@@ %d LOG Create: Invalid Name ",_pid); printm(scenario); nl()};

249 Runner()
  Should have a printf here that outputs scenario details as LOG.

280-300 nesting way too deep

476

    if
    ::  startTask == true ->
            TestSyncObtain(SEMA_TASK_START_0);
            TestSyncRelease(SEMA_TASK_START_0);

   The TestXXX lines are at the same "level" as the startTask check
    `->` is the same as `;`
    8-char indent is too much

    if
    ::  startTask == true ->
        TestSyncObtain(SEMA_TASK_START_0);
        TestSyncRelease(SEMA_TASK_START_0);



FAILS:

287-298
L:@@@ 4 SCALAR createRC 19
F:0.6:0:RUN/PML-TaskMgr002:tr-task-mgr-model-2.c:125:RTEMS_SUCCESSFUL == RTEMS_INVALID_PRIORITY
L:Runner finished
L:Run Pop Fixture
L:Worker0 wakeup semaphore = 436273153
L:Runner Teardown
L:Deleting Worker 0 ReleaseTestSyncSema Semaphore
L:Deleting Worker 1 ReleaseTestSyncSema Semaphore
L:Deleting Runner ReleaseTestSyncSema Semaphore
L:Deleting Lock 0 ReleaseTestSyncSema Semaphore
L:Deleting Worker Flags TestSync Semaphore
F:*:0:RUN:*:*:RTEMS task leak (1)
E:RtemsModelTaskMgr2:N:14:F:2:D:0.005859

467
E:RtemsModelTaskMgr17:N:37:F:1:D:0.016379

954
Z:TestsuitesModel0:C:19:N:363:F:3:D:0.560945


From task-mgr-2.spn
@@@ 0 LOG Create: Invalid Priority (MAX) CreateDestroy
@@@ 0 INIT
Run...
 37: setting priority of proc 0 (:init:) to 5
@@@ 0 SIGNAL 3
@@@ 4 CALL task_create 1 255 0 0 2 createRC

Is 255 an invalid RTEMS priority???

